*********************************************************************
* Copyright 2006 Automated Software Tools Corporation               *
* This source code is part of z390 assembler/emulator package       *
* The z390 package is distributed under GNU general public license  *
* Author - Don Higgins                                              *
*********************************************************************
*
* RUN DEMOGUI5 WITH GUAM OPTION TO DEMO TN3270 APPL WITH 3 FIELDS
*
* DEMOGUI6 PROMPS FOR NAME, ADDR, ZIP AND USES SEPARATE AREA OF
* SAME SCREEN TO DISPLAY ANY FIELD THAT WAS UPDATED.
*********************************************************************
* 02/27/06 NEW DEMO TO TEST TAB AND READ FOR MULTILPE FIELDS
* 03/02/06 RPI 220 TEXT SF TEXT OVERWRITE, TEXT WCC X'04' BELL
* 03/13/06 RPI 220 USE ESC,WRT_EW TO CLEAR, REMOVE WCC_CKD
* 03/15/06 RPI 224 CORRECT SBA ADDR FOR IC TO FIRST INPUT FIELD AND
*          USE RA COMMAND WITH NULLS TO CLEAR ERROR MESSAGE LINE
*********************************************************************
*MCALL #=     1 LV= 1 DEMOGUI4 SUBENTRY
DEMOGUI4    CSECT
         STM   14,12,12(13)
         BAL   15,104(15)
         DC    18F'0'
         DC    CL8'DEMOGUI4'
         DC    CL8'01/02/05'
         DC    CL8'22.33'
         ST    15,8(13)
         ST    13,4(15)
         LR    13,15
         USING DEMOGUI4+8,13
*MEXIT #=     1 LV= 1 SUBENTRY
*MCALL #=     2 LV= 1          GUAM  WINDOW,TITLE,'DEMOGUI6 TN3270 MULTX
                FIELD TEST'
        LA     0,GUI_WINDOW_TITLE
        LA     15,=C'"DEMOGUI6 TN3270 MULT FIELD TEST"'     R15=A(TITLEX
               ) DQ DELIMITED
        LA     1,=A(*-*)
        ST     15,0(1)            R1=A(A(TITLE))
         SVC   84 GUAM R0LL=MAJOR/MINOR
*MEXIT #=     2 LV= 1 GUAM
REFRESH  EQU   *
*MCALL #=     3 LV= 1          TPUT  TITLE,LTITLE,FULLSCR      CLEAR SCX
               REEN AND SHOW TITLE
         LA    1,TITLE
         LA    0,LTITLE
         ICM   1,8,=B'00000011'
         SVC   93 R0=(ASID,LENGTH) R1=(FLAGS,ADDR)
*MEXIT #=     3 LV= 1 TPUT
LOOP     EQU   *
*MCALL #=     4 LV= 1          TPUT  PROMPT,LPROMPT,FULLSCR    PROMPT FX
               OR 3 FIELD INPUT
         LA    1,PROMPT
         LA    0,LPROMPT
         ICM   1,8,=B'00000011'
         SVC   93 R0=(ASID,LENGTH) R1=(FLAGS,ADDR)
*MEXIT #=     4 LV= 1 TPUT
*MCALL #=     5 LV= 1          TGET  INPUT,LINPUT,ASIS         READ AIDX
                OR ANY FIELD UPDT
         LA    1,INPUT
         LA    0,LINPUT
         ICM   1,8,=B'10000001'
         SVC   93 R0=(ASID,LENGTH) R1=(FLAGS,ADDR)
*MEXIT #=     5 LV= 1 TGET
         CLI   INPUT,CLEAR               CLEAR SCREEN ON CLEAR (CTRL-C)
         BE    REFRESH
         CLI   INPUT,PF1                 DISPLAY HELP SCREEN
         BE    HELP
         CLI   INPUT,PF3                 EXIT ON PF3
         BE    EXIT
         CLI   INPUT,ENTER               UPDATE CHANGED FIELDS ON ENTER
         BE    UPDATE
         UNPK  SHOW_HEX(3),INPUT(2)
         TR    SHOW_HEX(2),HEXTAB-240
         MVI   SHOW_HEX+2,C' '
*MCALL #=     6 LV= 1          TPUT  SHOW_AID,LSHOW_AID,FULLSCR SHOW HEX
               X AID AND IGNORE
         LA    1,SHOW_AID
         LA    0,LSHOW_AID
         ICM   1,8,=B'00000011'
         SVC   93 R0=(ASID,LENGTH) R1=(FLAGS,ADDR)
*MEXIT #=     6 LV= 1 TPUT
         B     LOOP
*MCALL #=     7 LV= 1 EXIT     SUBEXIT
EXIT    DS    0H
         LA    15,0
         L     13,4(,13)
         L     14,12(,13)
         LM    2,12,28(13)
         BR    14
*MEXIT #=     7 LV= 1 SUBEXIT
HELP     EQU   * DISPLAY HELP SCREEN AND WAIT FOR ENTER TO REFRESH
*MCALL #=     8 LV= 1          TPUT  SHOW_HELP,LSHOW_HELP,FULLSCR
         LA    1,SHOW_HELP
         LA    0,LSHOW_HELP
         ICM   1,8,=B'00000011'
         SVC   93 R0=(ASID,LENGTH) R1=(FLAGS,ADDR)
*MEXIT #=     8 LV= 1 TPUT
*MCALL #=     9 LV= 1          TGET  INPUT,LINPUT,ASIS
         LA    1,INPUT
         LA    0,LINPUT
         ICM   1,8,=B'10000001'
         SVC   93 R0=(ASID,LENGTH) R1=(FLAGS,ADDR)
*MEXIT #=     9 LV= 1 TGET
         B     REFRESH
UPDATE   EQU   * UPDATE LOWER SCREEN FROM MODIFIED INPUT FIELDS
         LTR   R1,R1 DSHX
         LA    R3,INPUT(R1)  R3 = END OF INPUT + 1
         LA    R4,INPUT+3    FIRST FIELD AFTER AID AND CURSOR SBA
         CLR   R4,R3         IS THERE AN UPDATED FIELD
         BNL   ERROR_NOFIELD SHOW NO FIELDS UPDATED ERROR
NEXT_FIELD EQU   *
         CLR   R4,R3         ANY MORE MODIFIED FIELDS IN INPUT
         BNL   LOOP          NO GO PROMPT AGAIN
         CLC   0(3,R4),NAME_KEY
         BE    UPDATE_NAME
         CLC   0(3,R4),ADDR_KEY
         BE    UPDATE_ADDR
         CLC   0(3,R4),ZIP_KEY
         BE    UPDATE_ZIP
         B     ERROR_BADFIELD      NO SBA MATCH, SHOW BAD SBA ERROR
UPDATE_NAME EQU *
         MVC   DNAME,3(R4)
         LA    R4,3+L'DNAME(R4)
*MCALL #=    10 LV= 1          TPUT  SHOW_NAME,LSHOW_NAME,FULLSCR
         LA    1,SHOW_NAME
         LA    0,LSHOW_NAME
         ICM   1,8,=B'00000011'
         SVC   93 R0=(ASID,LENGTH) R1=(FLAGS,ADDR)
*MEXIT #=    10 LV= 1 TPUT
         B     NEXT_FIELD
UPDATE_ADDR EQU *
         MVC   DADDR,3(R4)
         LA    R4,3+L'DADDR(R4)
*MCALL #=    11 LV= 1          TPUT  SHOW_ADDR,LSHOW_ADDR,FULLSCR
         LA    1,SHOW_ADDR
         LA    0,LSHOW_ADDR
         ICM   1,8,=B'00000011'
         SVC   93 R0=(ASID,LENGTH) R1=(FLAGS,ADDR)
*MEXIT #=    11 LV= 1 TPUT
         B     NEXT_FIELD
UPDATE_ZIP EQU *
         MVC   DZIP,3(R4)
         LA    R4,3+L'DZIP(R4)
*MCALL #=    12 LV= 1          TPUT  SHOW_ZIP,LSHOW_ZIP,FULLSCR
         LA    1,SHOW_ZIP
         LA    0,LSHOW_ZIP
         ICM   1,8,=B'00000011'
         SVC   93 R0=(ASID,LENGTH) R1=(FLAGS,ADDR)
*MEXIT #=    12 LV= 1 TPUT
         B     NEXT_FIELD
ERROR_NOFIELD EQU   *
*MCALL #=    13 LV= 1          TPUT  SHOW_NOFIELD,LSHOW_NOFIELD,FULLSCR
         LA    1,SHOW_NOFIELD
         LA    0,LSHOW_NOFIELD
         ICM   1,8,=B'00000011'
         SVC   93 R0=(ASID,LENGTH) R1=(FLAGS,ADDR)
*MEXIT #=    13 LV= 1 TPUT
         B     LOOP
ERROR_BADFIELD EQU   *
*MCALL #=    14 LV= 1          TPUT  SHOW_BADFIELD,LSHOW_BADFIELD,FULLSX
               CR
         LA    1,SHOW_BADFIELD
         LA    0,LSHOW_BADFIELD
         ICM   1,8,=B'00000011'
         SVC   93 R0=(ASID,LENGTH) R1=(FLAGS,ADDR)
*MEXIT #=    14 LV= 1 TPUT
         B     LOOP
         PRINT DATA
*MCALL #=    15 LV= 1 TITLE    TN3270 ESC,WRT_EW,WCC_KD,(SBA,1,10),(SF,X
               ATT_PA)
TITLE       EQU   *
         DC    AL1(ESC,WRT_EW,WCC_KD)
         DC    AL1(SBA,64,201)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    15 LV= 1 TN3270
         DC    C'DEMOGUI6 UPDATE NAME, ADDR, AND/OR ZIP (PF1=HELP PF3=EX
               XIT)'
*MCALL #=    16 LV= 1          TN3270 (SBA,15,10),(SF,ATT_PA,C'PRESS F1X
                FOR HELP')
         DC    AL1(SBA,209,233)
         DC    AL1(SF,ATT_PA)
         DC    C'PRESS F1 FOR HELP'
*MEXIT #=    16 LV= 1 TN3270
LTITLE   EQU   *-TITLE
*MCALL #=    17 LV= 1 PROMPT   TN3270 WCC_KD
PROMPT       EQU   *
         DC    AL1(WCC_KD)
*MEXIT #=    17 LV= 1 TN3270
*MCALL #=    18 LV= 1          TN3270 (SBA,3,10),(SF,ATT_PA)
         DC    AL1(SBA,194,233)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    18 LV= 1 TN3270
         DC    C'ENTER NAME'
*MCALL #=    19 LV= 1          TN3270 (SF,ATT_UA)
         DC    AL1(SF,ATT_UA)
*MEXIT #=    19 LV= 1 TN3270
NAME_FIELD DC  40C'_'
*MCALL #=    20 LV= 1          TN3270 (SF,ATT_PA)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    20 LV= 1 TN3270
*MCALL #=    21 LV= 1          TN3270 (SBA,5,10),(SF,ATT_PA)
         DC    AL1(SBA,197,201)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    21 LV= 1 TN3270
         DC    C'ENTER ADDR'
*MCALL #=    22 LV= 1          TN3270 (SF,ATT_UA)
         DC    AL1(SF,ATT_UA)
*MEXIT #=    22 LV= 1 TN3270
ADDR_FIELD DC  40C'_'
*MCALL #=    23 LV= 1          TN3270 (SF,ATT_PA)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    23 LV= 1 TN3270
*MCALL #=    24 LV= 1          TN3270 (SBA,7,10),(SF,ATT_PA)
         DC    AL1(SBA,199,233)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    24 LV= 1 TN3270
         DC    C'ENTER  ZIP'
*MCALL #=    25 LV= 1          TN3270 (SF,ATT_UN)
         DC    AL1(SF,ATT_UN)
*MEXIT #=    25 LV= 1 TN3270
ZIP_FIELD DC   5C'_'
*MCALL #=    26 LV= 1          TN3270 (SF,ATT_PA),(SBA,3,22),IC
         DC    AL1(SF,ATT_PA)
         DC    AL1(SBA,194,245,IC)
*MEXIT #=    26 LV= 1 TN3270
LPROMPT  EQU   *-PROMPT
*MCALL #=    27 LV= 1 NAME_KEY TN3270 (SBA,3,22)
NAME_KEY       EQU   *
         DC    AL1(SBA,194,245)
*MEXIT #=    27 LV= 1 TN3270
*MCALL #=    28 LV= 1 ADDR_KEY TN3270 (SBA,5,22)
ADDR_KEY       EQU   *
         DC    AL1(SBA,197,213)
*MEXIT #=    28 LV= 1 TN3270
*MCALL #=    29 LV= 1 ZIP_KEY  TN3270 (SBA,7,22)
ZIP_KEY       EQU   *
         DC    AL1(SBA,199,245)
*MEXIT #=    29 LV= 1 TN3270
INPUT    DS    XL200
LINPUT   EQU   *-INPUT
*MCALL #=    30 LV= 1 SHOW_NAME TN3270 WCC_KD,(SBA,9,10),(SF,ATT_PA)
SHOW_NAME       EQU   *
         DC    AL1(WCC_KD)
         DC    AL1(SBA,74,201)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    30 LV= 1 TN3270
         DC    C'NAME'
*MCALL #=    31 LV= 1          TN3270 (SF,ATT_PA)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    31 LV= 1 TN3270
DNAME    DC    CL40' '
*MCALL #=    32 LV= 1          TN3270 (SBA,15,10),(RA,15,80,0)
         DC    AL1(SBA,209,233)
         DC    AL1(RA,210,111,0)
*MEXIT #=    32 LV= 1 TN3270
LSHOW_NAME EQU   *-SHOW_NAME
*MCALL #=    33 LV= 1 SHOW_ADDR TN3270 WCC_KD,(SBA,11,10),(SF,ATT_PA)
SHOW_ADDR       EQU   *
         DC    AL1(WCC_KD)
         DC    AL1(SBA,76,233)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    33 LV= 1 TN3270
         DC    C'ADDR'
*MCALL #=    34 LV= 1          TN3270 (SF,ATT_PA)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    34 LV= 1 TN3270
DADDR    DC    CL40' '
*MCALL #=    35 LV= 1          TN3270 (SBA,15,10),(RA,15,80,0)
         DC    AL1(SBA,209,233)
         DC    AL1(RA,210,111,0)
*MEXIT #=    35 LV= 1 TN3270
LSHOW_ADDR EQU   *-SHOW_ADDR
*MCALL #=    36 LV= 1 SHOW_ZIP TN3270 WCC_KD,(SBA,13,10),(SF,ATT_PA)
SHOW_ZIP       EQU   *
         DC    AL1(WCC_KD)
         DC    AL1(SBA,79,201)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    36 LV= 1 TN3270
         DC    C'ZIP '
*MCALL #=    37 LV= 1          TN3270 (SF,ATT_PA)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    37 LV= 1 TN3270
DZIP     DC    CL5' '
*MCALL #=    38 LV= 1          TN3270 (SBA,15,10),(RA,15,80,0)
         DC    AL1(SBA,209,233)
         DC    AL1(RA,210,111,0)
*MEXIT #=    38 LV= 1 TN3270
LSHOW_ZIP EQU   *-SHOW_ZIP
*MCALL #=    39 LV= 1 SHOW_AID TN3270 WCC_BKD,(SBA,15,10),(SF,ATT_PA)
SHOW_AID       EQU   *
         DC    AL1(WCC_BKD)
         DC    AL1(SBA,209,233)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    39 LV= 1 TN3270
         DC    C'NO ACTION FOR AID KEY HEX '
*MCALL #=    40 LV= 1          TN3270 (SF,ATT_PA)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    40 LV= 1 TN3270
SHOW_HEX DC     C'HH ' EXTRA SPACE FOR UNPACK
*MCALL #=    41 LV= 1          TN3270 (RA,15,80,0),(SF,ATT_PA)
         DC    AL1(RA,210,111,0)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    41 LV= 1 TN3270
LSHOW_AID EQU   *-SHOW_AID
HEXTAB   DC    C'0123456789ABCDEF'
*MCALL #=    42 LV= 1 SHOW_NOFIELD TN3270 WCC_BKD,(SBA,15,10),(SF,ATT_PX
               A)
SHOW_NOFIELD       EQU   *
         DC    AL1(WCC_BKD)
         DC    AL1(SBA,209,233)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    42 LV= 1 TN3270
         DC    C'NO FIELDS CHANGED'
*MCALL #=    43 LV= 1          TN3270 (RA,15,80,0),(SF,ATT_PA)
         DC    AL1(RA,210,111,0)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    43 LV= 1 TN3270
LSHOW_NOFIELD EQU   *-SHOW_NOFIELD
*MCALL #=    44 LV= 1 SHOW_BADFIELD TN3270 WCC_BKD,(SBA,15,10),(SF,ATT_X
               PA)
SHOW_BADFIELD       EQU   *
         DC    AL1(WCC_BKD)
         DC    AL1(SBA,209,233)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    44 LV= 1 TN3270
         DC    C'FIELD COMMAND AND/OR SBA NOT FOUND'
*MCALL #=    45 LV= 1          TN3270 (RA,15,80,0),(SF,ATT_PA)
         DC    AL1(RA,210,111,0)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    45 LV= 1 TN3270
LSHOW_BADFIELD EQU   *-SHOW_BADFIELD
*MCALL #=    46 LV= 1 SHOW_HELP TN3270 ESC,WRT_EW,WCC_KD
SHOW_HELP       EQU   *
         DC    AL1(ESC,WRT_EW,WCC_KD)
*MEXIT #=    46 LV= 1 TN3270
*MCALL #=    47 LV= 1          TN3270 (SBA,2,10),(SF,ATT_PA)
         DC    AL1(SBA,193,217)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    47 LV= 1 TN3270
         DC     C'DEMOGUI6 TEST INTERACTIVE TN3270 WITH 3 FIELDS'
*MCALL #=    48 LV= 1          TN3270 (SBA,3,10),(SF,ATT_PA)
         DC    AL1(SBA,194,233)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    48 LV= 1 TN3270
         DC     C'PRESS ENTER OR ANY AID KEY TO RETURN TO MAIN SCREEN'
*MCALL #=    49 LV= 1          TN3270 (SBA,4,10),(SF,ATT_PA)
         DC    AL1(SBA,195,249)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    49 LV= 1 TN3270
         DC     C'TAB CURSOR TO FIELD YOU WISH TO CHANGE'
*MCALL #=    50 LV= 1          TN3270 (SBA,5,10),(SF,ATT_PA)
         DC    AL1(SBA,197,201)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    50 LV= 1 TN3270
         DC     C'ENTER DATA IN ONE OR MORE FIELDS AND PRESS ENTER'
*MCALL #=    51 LV= 1          TN3270 (SBA,6,10),(SF,ATT_PA)
         DC    AL1(SBA,198,217)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    51 LV= 1 TN3270
         DC     C'THE ZIP FIELD IS NUMERIC SO ALPHA IS IGNORED'
*MCALL #=    52 LV= 1          TN3270 (SBA,7,10),(SF,ATT_PA)
         DC    AL1(SBA,199,233)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    52 LV= 1 TN3270
         DC     C'USE BACK SPACE WITHIN FIELD TO CORRECT FIELD'
*MCALL #=    53 LV= 1          TN3270 (SBA,8,10),(SF,ATT_PA)
         DC    AL1(SBA,200,249)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    53 LV= 1 TN3270
         DC     C'USE CLEAR (CTRL-C) TO REFRESH SCREEN'
*MCALL #=    54 LV= 1          TN3270 (SBA,9,10),(SF,ATT_PA)
         DC    AL1(SBA,74,201)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    54 LV= 1 TN3270
         DC     C'USE PF3 TO EXIT APPLICATION FROM MAIN SCREEN'
*MCALL #=    55 LV= 1          TN3270 (SBA,10,10),(SF,ATT_PA)
         DC    AL1(SBA,75,217)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    55 LV= 1 TN3270
         DC     C'ANY UNUSED AID KEY SUCH AS PF4-PF24 SHOWS HEX VALUE'
*MCALL #=    56 LV= 1          TN3270 (SBA,11,10),(SF,ATT_PA)
         DC    AL1(SBA,76,233)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    56 LV= 1 TN3270
         DC     C'SUBMIT RPI IF YOU FIND ANY ERRORS VIA WWW.Z390.ORG'
LSHOW_HELP EQU *-SHOW_HELP
*MCALL #=    57 LV= 1          TN3270 SYMBOLS DEFINE TN3290 CONTROL ANDX
                ATTRIBUTE CODES
*
* TN3270 CALL OPTIONS FROM TOP 16 BITS OF FIRST WORD OF PARMLIST
*
TGET_EDIT_WAIT   EQU X'80' READ,EDIT,WAIT FOR TN3270 DEVICE
TGET_EDIT_NOWAIT EQU X'90' READ,EDIT,WAIT FOR TN3270 DEVICE
TGET_ASIS_WAIT   EQU X'81' READ,ASIS,WAIT FOR TN3270 DEVICE
TGET_ASIS_NOWAIT EQU X'91' READ,ASIS,NOWAIT FOR TN3270 DEVICE
TPUT_EDIT        EQU X'00' WRITE,FULLSCN  FOR 3270 DEVICE
TPUT_ASIS        EQU X'01' WRITE,FULLSCN  FOR 3270 DEVICE
TPUT_FULLSCR     EQU X'03' WRITE,FULLSCN  FOR 3270 DEVICE
*
* TN3270 DATA STREAM PREFIX CONTROL CODES
*
ESC      EQU   X'27'       ESCAPE (OPTIONAL FOLLOWED BY WRT,WCC)
WRT      EQU   X'F1'       WRITE
WRT_EW   EQU   X'F5'       ERASE WRITE
WRT_EWA  EQU   X'7E'       ERASE WRITE ALTERNATE
WRT_EAU  EQU   X'6F'       ERASE ALL UNPROTECTED FIELDS RPI 628
WCC_BKD  EQU   X'C7'       WCC BEEP, RESET KBD, RESET MDT
WCC_KD   EQU   X'C3'       WCC RESET KBD, RESET MDT
*
* TN3270 DATA STREAM ORDERS
*
PT       EQU   X'05'       PROGRAM TAB (ADVANCE TO NEXT UNPROT FIELD)
GE       EQU   X'08'       GRAPHIC ESCAPE (REPLACE CHAR FROM APL TAB)
SBA      EQU   X'11'       SET BUFFER ADDRESS (2 ADDR BYTES)
SF       EQU   X'1D'       START FIELD        (1 - ATTRIBUTE BYTE)
EUA      EQU   X'12'       ERASE UNPROTECTED FIELDS TO (2 ADDR BYTES)
IC       EQU   X'13'       INSERT CURSOR AT CURRENT SBA
SFE      EQU   X'29'       START EXTENDED FIELD (COUNT,(ATT_TYPE,ATT))
RA       EQU   X'3C'       REPEAT TO ADDR (2 ADDR BYTES, REPEAT CHAR)
*
* TN3270 KEYBOARD INPUT AID CONTROL CODES
*
NOAID    EQU   X'60'       NO AID AVAILABLE
ENTER    EQU   X'7D'       ENTER KEY
PF1      EQU   X'F1'       PROGRAM FUNCTION KEY 1
PF2      EQU   X'F2'       PROGRAM FUNCTION KEY 2
PF3      EQU   X'F3'       PROGRAM FUNCTION KEY 3
PF4      EQU   X'F4'       PROGRAM FUNCTION KEY 4
PF5      EQU   X'F5'       PROGRAM FUNCTION KEY 5
PF6      EQU   X'F6'       PROGRAM FUNCTION KEY 6
PF7      EQU   X'F7'       PROGRAM FUNCTION KEY 7
PF8      EQU   X'F8'       PROGRAM FUNCTION KEY 8
PF9      EQU   X'F9'       PROGRAM FUNCTION KEY 9
PF10     EQU   X'7A'       PROGRAM FUNCTION KEY 10
PF11     EQU   X'7B'       PROGRAM FUNCTION KEY 11
PF12     EQU   X'7C'       PROGRAM FUNCTION KEY 12
PF13     EQU   X'C1'       PROGRAM FUNCTION KEY 13 (CTRL-ALT F1-F12)
PF14     EQU   X'C2'       PROGRAM FUNCTION KEY 14 (CTRL-ALT F1-F12)
PF15     EQU   X'C3'       PROGRAM FUNCTION KEY 15 (CTRL-ALT F1-F12)
PF16     EQU   X'C4'       PROGRAM FUNCTION KEY 16 (CTRL-ALT F1-F12)
PF17     EQU   X'C5'       PROGRAM FUNCTION KEY 17 (CTRL-ALT F1-F12)
PF18     EQU   X'C6'       PROGRAM FUNCTION KEY 18 (CTRL-ALT F1-F12)
PF19     EQU   X'C7'       PROGRAM FUNCTION KEY 19 (CTRL-ALT F1-F12)
PF20     EQU   X'C8'       PROGRAM FUNCTION KEY 20 (CTRL-ALT F1-F12)
PF21     EQU   X'C9'       PROGRAM FUNCTION KEY 21 (CTRL-ALT F1-F12)
PF22     EQU   X'4A'       PROGRAM FUNCTION KEY 22 (CTRL-ALT F1-F12)
PF23     EQU   X'4B'       PROGRAM FUNCTION KEY 23 (CTRL-ALT F1-F12)
PF24     EQU   X'4C'       PROGRAM FUNCTION KEY 24 (CTRL-ALT F1-F12)
PA1      EQU   X'6C'       PROGRAM ATTENTION 1     (CTRL-F1)
PA2      EQU   X'6E'       PROGRAM ATTENTION 2     (CTRL-F2)
PA3      EQU   X'6B'       PROGRAM ATTENTION 3     (CTRL-F3)
CLEAR    EQU   X'6D'       CLEAR SCREEN            (CTRL-C)
*
* LOCAL 3270 KEYBOARD COMMANDS - RPI 628 (SEE GZ390.JAVA)
* (THESE KEYSTROKES ONLY CHANGE TN3270 BUFFER SO NO CODE ASSIGNED)
*
* EEOF - ERASE TO END OF FIELD   (CTRL-F6)
* EINP - ERASE INPUT             (CTRL-F7)
*
* TN3270 ATTRIBUTE BYTES
*
*  BIT 0-1 CHECKSUM
*  BIT 2   PROTECTED FIELD
*  BIT 3   NUMBERIC  FIELD
*  BIT 4-5 FIELD DISPLAY
*           00=NORMAL INTENSITY
*           01=NORMAL INTENSITY PLUS LIGHT PEN
*           10=HIGH   INTENSITY NO LIGHT PEN
*           11=NON DISPLAY USED FOR HIDDEN FIELDS
*
*                EBCDIC CHAR 6bit RPI 572 See 3270 Pgmr Ref Appendix C
ATT_PAH     EQU X'F8'  '8'  38   PROTECTED HIGH INTENSITY TEXT
ATT_PND     EQU X'6C'  '%"  3C   PROTECTED NON-DISPLAY
ATT_PA      EQU X'F0'  '0'  30   PROTECTED NORMAL TEXT
ATT_UA      EQU X'40'  ' '  00   UNPROTECTED ALPHA INPUT FIELD
ATT_UN      EQU X'50'  '&'  10   UNPROTECTED NUMERIC INPUT FIELD
ATT_UND     EQU X'4C'  '<'  0C   UNPROTECTED NON-DISPLAY
ATT_PAH_MDT EQU X'F9'  '9'  39   PROTECTED HIGH INTENSITY TEXT, MDT
ATT_PA_MDT  EQU X'F1'  '1'  31   PROTECTED NORMAL TEXT, MDT
ATT_UA_MDT  EQU X'C1'  'A'  01   UNPROTECTED ALPHA INPUT FIELD, MDT
ATT_UN_MDT  EQU X'D1'  'J'  11   UNPROTECTED NUMERIC INPUT FIELD, MDT
*
* SFE ENTENDED ATTRIBUTE TYPE PREFIXES
*
SFE_BFA  EQU   X'C0'       BASIC FIELD ATTRIBUTE
SFE_HL   EQU   X'41'       EXTENDED HIGHLIGHTING
SFE_COLOR EQU  X'42'       COLOR
SFE_DEFAULT   EQU X'00'
SFE_BLUE      EQU X'F1'
SFE_RED       EQU X'F2'
SFE_PINK      EQU X'F3'
SFE_GREEN     EQU X'F4'
SFE_TURQUOISE EQU X'F5'
SFE_YELLOW    EQU X'F6'
SFE_WHITE     EQU X'F7'
*MEXIT #=    57 LV= 1 TN3270
*MCALL #=    58 LV= 1          GUAM   SYMBOLS DEFINE GUI MCS, SCREEN, AX
               ND GRAPH CODES
GUI_WINDOW_TITLE       EQU X'0101' GUI WINDOW,TITLE,'text'
GUI_WINDOW_LOC         EQU X'0102' GUI WINDOW,LOC,x,y
GUI_WINDOW_SIZE        EQU X'0103' GUI WINDOW,width,height
GUI_WINDOW_FONT        EQU X'0104' GUI WINDOW,size (8-30)
GUI_WINDOW_VIEW        EQU X'0105' GUI WINDOW,VIEW,type (0-3)
GUI_WINDOW_VIEW_NONE   EQU 0       GUI WINDOW,VIEW,NONE window closed
GUI_WINDOW_VIEW_MCS    EQU 1       GUI WINDOW,VIEW,MCS console log
GUI_WINDOW_VIEW_SCREEN EQU 2       GUI WINDOW,VIEW,SCREEN,row,col,color
GUI_WINDOW_VIEW_GRAPH  EQU 3       GUI WINDOW,VIEW,GRAPH,x,y,color
GUI_WINDOW_GETVIEW     EQU X'0106' GUI WINDOW,GETVIEW return view 0-3
GUI_SCREEN_READ        EQU X'0201' GUI SCREEN,READ,b,lb,WAIT/NOWAIT
GUI_WAIT               EQU 1       GUI WAIT FOR KEYBOARD INPUT
GUI_NOWAIT             EQU 0       GUI NOWAIT RETURN R15=4 IF NO INPUT
GUI_SCREEN_WRITE       EQU X'0202' GUI SCREEN,WRITE,row,col,b,lb,color
GUI_SCREEN_FIELD       EQU X'0203' GUI SCREEN,FIELD,row,col,length
GUI_SCREEN_CURSOR      EQU X'0204' GUI SCREEN,CURSOR,row,col,type
GUI_SCREEN_COLOR       EQU X'0205' GUI SCREEN,COLOR,bg_color,text_color
GUI_GRAPH_POINT        EQU X'0301' GUI GRAPH,POINT,x,y,color
GUI_GRAPH_LINE         EQU X'0302' GUI GRAPH,LINE,x1,y1,x2,y2,color
GUI_GRAPH_FILL         EQU X'0303' GUI GRAPH,FILL,x1,y1,x2,y2,color
GUI_GRAPH_TEXT         EQU X'0304' GUI GRAPH,TEXT,x,y,'text',color
GUI_KEYBOARD_READ      EQU X'0401' GUI KEYBOARD,mode,char,WAIT/NOWAIT
GUI_MOUSE_READ         EQU X'0501' GUI MOUSE,x,y,left,right
GUI_BUTTON_DOWN        EQU 1 MOUSE BUTTON PRESSED DOWN
GUI_BUTTON_UP          EQU 0 MOUSE BUTTON UP
GUI_SOUND_PLAY         EQU X'0601' GUI SOUND,PLAY,wav_file
*MEXIT #=    58 LV= 1 GUAM
*MCALL #=    59 LV= 1          EQUREGS
R0 EQU 0
R1 EQU 1
R2 EQU 2
R3 EQU 3
R4 EQU 4
R5 EQU 5
R6 EQU 6
R7 EQU 7
R8 EQU 8
R9 EQU 9
R10 EQU 10
R11 EQU 11
R12 EQU 12
R13 EQU 13
R14 EQU 14
R15 EQU 15
*MEXIT #=    59 LV= 1 EQUREGS
         END

*********************************************************************
* Copyright 2005 Automated Software Tools Corporation               *
* This source code is part of z390 assembler/emulator package       *
* The z390 package is distributed under GNU general public license  *
* Author - Don Higgins                                              *
* Date   - 11/30/05                                                 *
*********************************************************************
*
* RUN DEMOGUI4 WITH GUI OPTION TO DEMO GUI SCREEN TN3270 SUPPORT
*
* DEMOGUI4 DISPLAYS MESSAGES AT SPECIFIED ROW AND COLUMN USING
* TN3270 SUPPORT FOR 3270 DATA STREAMS WHICH CAN BE READ AND
* WRITTEN TO GUI SCREEN VIEW VIA TGET AND TPUT MACROS WITH ASIS
* AND FULLSCR OPTIONS.
*********************************************************************
* 11/30/05 RPI47 ADD DEMO OF TN3270 TPUT AND TGET GUI SUPPORT
* 02/16/06 RPI136 UPDATE TO CONFORM WITH TN3270 SPECS.
* 02/23/06 RPI212 UPDATE TO REMOVE ESC,ERASE/WRITE,WCC FROM 2ND TPUT
* 02/25/06 RPI219 TEST REGISTER FORM OF TGET AND TPUT, ADD REQ'D WCC
* 03/13/06 RPI 220 USE ESC,WRT_EW TO CLEAR, REMOVE WCC_CKD
*********************************************************************
*MCALL #=     1 LV= 1 DEMOGUI4 SUBENTRY
DEMOGUI4    CSECT
         STM   14,12,12(13)
         BAL   15,104(15)
         DC    18F'0'
         DC    CL8'DEMOGUI4'
         DC    CL8'01/02/05'
         DC    CL8'22.33'
         ST    15,8(13)
         ST    13,4(15)
         LR    13,15
         USING DEMOGUI4+8,13
*MEXIT #=     1 LV= 1 SUBENTRY
*MCALL #=     2 LV= 1          GUAM  WINDOW,TITLE,'DEMOGUI4 TN3270 SUPPX
               ORT VIA TGET/TPUT'
        LA     0,GUI_WINDOW_TITLE
        LA     15,=C'"DEMOGUI4 TN3270 SUPPORT VIA TGET/TPUT"'     R15=AX
               (TITLE) DQ DELIMITED
        LA     1,=A(*-*)
        ST     15,0(1)            R1=A(A(TITLE))
         SVC   84 GUAM R0LL=MAJOR/MINOR
*MEXIT #=     2 LV= 1 GUAM
*MCALL #=     3 LV= 1          TPUT  MSG1,MSG1L,FULLSCR
         LA    1,MSG1
         LA    0,MSG1L
         ICM   1,8,=B'00000011'
         SVC   93 R0=(ASID,LENGTH) R1=(FLAGS,ADDR)
*MEXIT #=     3 LV= 1 TPUT
         LA    R6,MSG2
         LA    R7,MSG2L
         ICM   R6,8,=AL1(TPUT_FULLSCR)
         LA    R8,INPUT
         LA    R9,L'INPUT
         ICM   R8,8,=AL1(TGET_ASIS_WAIT)
LOOP     EQU   *
*MCALL #=     4 LV= 1          TPUT  (6),(7),R
*MCALL #=     5 LV= 2          ZOPTLR 1,6
         LR    1,6
*MEXIT #=     5 LV= 2 ZOPTLR
*MCALL #=     6 LV= 2          ZOPTLR 0,7
         LR    0,7
*MEXIT #=     6 LV= 2 ZOPTLR
         SVC   93 R0=(ASID,LENGTH) R1=(FLAGS,ADDR)
*MEXIT #=     4 LV= 1 TPUT
*MCALL #=     7 LV= 1          TGET  (8),(9),R
*MCALL #=     8 LV= 2          ZOPTLR 1,8
         LR    1,8
*MEXIT #=     8 LV= 2 ZOPTLR
*MCALL #=     9 LV= 2          ZOPTLR 0,9
         LR    0,9
*MEXIT #=     9 LV= 2 ZOPTLR
         SVC   93 R0=(ASID,LENGTH) R1=(FLAGS,ADDR)
*MEXIT #=     7 LV= 1 TGET
         CLI   INPUT,PF3     EXIT ON PF3
         BE    EXIT
         CLI   INPUT,ENTER   IGNORE IF NOT ENTRY WITH TEXT FIELD
         BNE   LOOP
         LA    R2,REPLY
         LA    R3,REPLYL
         LA    R4,INPUT+3+3  FIRST FIELD DATA AFTER (KEY,SBA,SF,SBA)
         LR    R5,R1
         AHI   R5,-6
         ICM   R5,8,=C' '    PAD REPLY WITH SPACES
         MVCL  R2,R4
*MCALL #=    10 LV= 1          TPUT  MSG3,MSG3L,FULLSCR
         LA    1,MSG3
         LA    0,MSG3L
         ICM   1,8,=B'00000011'
         SVC   93 R0=(ASID,LENGTH) R1=(FLAGS,ADDR)
*MEXIT #=    10 LV= 1 TPUT
         CLC   REPLY(3),=C'END'
         BNE   LOOP          EXIT IF REPLY IS END
EXIT     EQU   *
*MCALL #=    11 LV= 1          SUBEXIT
         LA    15,0
         L     13,4(,13)
         L     14,12(,13)
         LM    2,12,28(13)
         BR    14
*MEXIT #=    11 LV= 1 SUBEXIT
INPUT    DS    XL100
         PRINT DATA
*MCALL #=    12 LV= 1 MSG1     TN3270 ESC,WRT_EW,WCC_KD,(SBA,2,10),(SF,X
               ATT_PA)
MSG1       EQU   *
         DC    AL1(ESC,WRT_EW,WCC_KD)
         DC    AL1(SBA,193,217)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    12 LV= 1 TN3270
         DC    C'DEMOGUI4 TEST TN3270 GUI INTERFACE'
MSG1L    EQU   *-MSG1
*MCALL #=    13 LV= 1 MSG2     TN3270 WCC_KD
MSG2       EQU   *
         DC    AL1(WCC_KD)
*MEXIT #=    13 LV= 1 TN3270
*MCALL #=    14 LV= 1          TN3270 (SBA,4,10),(SF,ATT_PA,C'TEXT OR EX
               ND=')
         DC    AL1(SBA,195,249)
         DC    AL1(SF,ATT_PA)
         DC    C'TEXT OR END='
*MEXIT #=    14 LV= 1 TN3270
*MCALL #=    15 LV= 1          TN3270 (SF,ATT_UA,C'???'),(SF,ATT_PA)
         DC    AL1(SF,ATT_UA)
         DC    C'???'
         DC    AL1(SF,ATT_PA)
*MEXIT #=    15 LV= 1 TN3270
*MCALL #=    16 LV= 1          TN3270 (SBA,4,24),IC
         DC    AL1(SBA,196,199,IC)
*MEXIT #=    16 LV= 1 TN3270
MSG2L    EQU   *-MSG2
*MCALL #=    17 LV= 1 MSG3     TN3270 WCC_KD,(SBA,6,10),(SF,ATT_PA)
MSG3       EQU   *
         DC    AL1(WCC_KD)
         DC    AL1(SBA,198,217)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    17 LV= 1 TN3270
REPLY    DC    CL40' '
*MCALL #=    18 LV= 1          TN3270 (SF,ATT_PA)
         DC    AL1(SF,ATT_PA)
*MEXIT #=    18 LV= 1 TN3270
REPLYL   EQU   *-REPLY
MSG3L    EQU   *-MSG3
*MCALL #=    19 LV= 1          TN3270 SYMBOLS DEFINE TN3290 CONTROL ANDX
                ATTRIBUTE CODES
*
* TN3270 CALL OPTIONS FROM TOP 16 BITS OF FIRST WORD OF PARMLIST
*
TGET_EDIT_WAIT   EQU X'80' READ,EDIT,WAIT FOR TN3270 DEVICE
TGET_EDIT_NOWAIT EQU X'90' READ,EDIT,WAIT FOR TN3270 DEVICE
TGET_ASIS_WAIT   EQU X'81' READ,ASIS,WAIT FOR TN3270 DEVICE
TGET_ASIS_NOWAIT EQU X'91' READ,ASIS,NOWAIT FOR TN3270 DEVICE
TPUT_EDIT        EQU X'00' WRITE,FULLSCN  FOR 3270 DEVICE
TPUT_ASIS        EQU X'01' WRITE,FULLSCN  FOR 3270 DEVICE
TPUT_FULLSCR     EQU X'03' WRITE,FULLSCN  FOR 3270 DEVICE
*
* TN3270 DATA STREAM PREFIX CONTROL CODES
*
ESC      EQU   X'27'       ESCAPE (OPTIONAL FOLLOWED BY WRT,WCC)
WRT      EQU   X'F1'       WRITE
WRT_EW   EQU   X'F5'       ERASE WRITE
WRT_EWA  EQU   X'7E'       ERASE WRITE ALTERNATE
WRT_EAU  EQU   X'6F'       ERASE ALL UNPROTECTED FIELDS RPI 628
WCC_BKD  EQU   X'C7'       WCC BEEP, RESET KBD, RESET MDT
WCC_KD   EQU   X'C3'       WCC RESET KBD, RESET MDT
*
* TN3270 DATA STREAM ORDERS
*
PT       EQU   X'05'       PROGRAM TAB (ADVANCE TO NEXT UNPROT FIELD)
GE       EQU   X'08'       GRAPHIC ESCAPE (REPLACE CHAR FROM APL TAB)
SBA      EQU   X'11'       SET BUFFER ADDRESS (2 ADDR BYTES)
SF       EQU   X'1D'       START FIELD        (1 - ATTRIBUTE BYTE)
EUA      EQU   X'12'       ERASE UNPROTECTED FIELDS TO (2 ADDR BYTES)
IC       EQU   X'13'       INSERT CURSOR AT CURRENT SBA
SFE      EQU   X'29'       START EXTENDED FIELD (COUNT,(ATT_TYPE,ATT))
RA       EQU   X'3C'       REPEAT TO ADDR (2 ADDR BYTES, REPEAT CHAR)
*
* TN3270 KEYBOARD INPUT AID CONTROL CODES
*
NOAID    EQU   X'60'       NO AID AVAILABLE
ENTER    EQU   X'7D'       ENTER KEY
PF1      EQU   X'F1'       PROGRAM FUNCTION KEY 1
PF2      EQU   X'F2'       PROGRAM FUNCTION KEY 2
PF3      EQU   X'F3'       PROGRAM FUNCTION KEY 3
PF4      EQU   X'F4'       PROGRAM FUNCTION KEY 4
PF5      EQU   X'F5'       PROGRAM FUNCTION KEY 5
PF6      EQU   X'F6'       PROGRAM FUNCTION KEY 6
PF7      EQU   X'F7'       PROGRAM FUNCTION KEY 7
PF8      EQU   X'F8'       PROGRAM FUNCTION KEY 8
PF9      EQU   X'F9'       PROGRAM FUNCTION KEY 9
PF10     EQU   X'7A'       PROGRAM FUNCTION KEY 10
PF11     EQU   X'7B'       PROGRAM FUNCTION KEY 11
PF12     EQU   X'7C'       PROGRAM FUNCTION KEY 12
PF13     EQU   X'C1'       PROGRAM FUNCTION KEY 13 (CTRL-ALT F1-F12)
PF14     EQU   X'C2'       PROGRAM FUNCTION KEY 14 (CTRL-ALT F1-F12)
PF15     EQU   X'C3'       PROGRAM FUNCTION KEY 15 (CTRL-ALT F1-F12)
PF16     EQU   X'C4'       PROGRAM FUNCTION KEY 16 (CTRL-ALT F1-F12)
PF17     EQU   X'C5'       PROGRAM FUNCTION KEY 17 (CTRL-ALT F1-F12)
PF18     EQU   X'C6'       PROGRAM FUNCTION KEY 18 (CTRL-ALT F1-F12)
PF19     EQU   X'C7'       PROGRAM FUNCTION KEY 19 (CTRL-ALT F1-F12)
PF20     EQU   X'C8'       PROGRAM FUNCTION KEY 20 (CTRL-ALT F1-F12)
PF21     EQU   X'C9'       PROGRAM FUNCTION KEY 21 (CTRL-ALT F1-F12)
PF22     EQU   X'4A'       PROGRAM FUNCTION KEY 22 (CTRL-ALT F1-F12)
PF23     EQU   X'4B'       PROGRAM FUNCTION KEY 23 (CTRL-ALT F1-F12)
PF24     EQU   X'4C'       PROGRAM FUNCTION KEY 24 (CTRL-ALT F1-F12)
PA1      EQU   X'6C'       PROGRAM ATTENTION 1     (CTRL-F1)
PA2      EQU   X'6E'       PROGRAM ATTENTION 2     (CTRL-F2)
PA3      EQU   X'6B'       PROGRAM ATTENTION 3     (CTRL-F3)
CLEAR    EQU   X'6D'       CLEAR SCREEN            (CTRL-C)
*
* LOCAL 3270 KEYBOARD COMMANDS - RPI 628 (SEE GZ390.JAVA)
* (THESE KEYSTROKES ONLY CHANGE TN3270 BUFFER SO NO CODE ASSIGNED)
*
* EEOF - ERASE TO END OF FIELD   (CTRL-F6)
* EINP - ERASE INPUT             (CTRL-F7)
*
* TN3270 ATTRIBUTE BYTES
*
*  BIT 0-1 CHECKSUM
*  BIT 2   PROTECTED FIELD
*  BIT 3   NUMBERIC  FIELD
*  BIT 4-5 FIELD DISPLAY
*           00=NORMAL INTENSITY
*           01=NORMAL INTENSITY PLUS LIGHT PEN
*           10=HIGH   INTENSITY NO LIGHT PEN
*           11=NON DISPLAY USED FOR HIDDEN FIELDS
*
*                EBCDIC CHAR 6bit RPI 572 See 3270 Pgmr Ref Appendix C
ATT_PAH     EQU X'F8'  '8'  38   PROTECTED HIGH INTENSITY TEXT
ATT_PND     EQU X'6C'  '%"  3C   PROTECTED NON-DISPLAY
ATT_PA      EQU X'F0'  '0'  30   PROTECTED NORMAL TEXT
ATT_UA      EQU X'40'  ' '  00   UNPROTECTED ALPHA INPUT FIELD
ATT_UN      EQU X'50'  '&'  10   UNPROTECTED NUMERIC INPUT FIELD
ATT_UND     EQU X'4C'  '<'  0C   UNPROTECTED NON-DISPLAY
ATT_PAH_MDT EQU X'F9'  '9'  39   PROTECTED HIGH INTENSITY TEXT, MDT
ATT_PA_MDT  EQU X'F1'  '1'  31   PROTECTED NORMAL TEXT, MDT
ATT_UA_MDT  EQU X'C1'  'A'  01   UNPROTECTED ALPHA INPUT FIELD, MDT
ATT_UN_MDT  EQU X'D1'  'J'  11   UNPROTECTED NUMERIC INPUT FIELD, MDT
*
* SFE ENTENDED ATTRIBUTE TYPE PREFIXES
*
SFE_BFA  EQU   X'C0'       BASIC FIELD ATTRIBUTE
SFE_HL   EQU   X'41'       EXTENDED HIGHLIGHTING
SFE_COLOR EQU  X'42'       COLOR
SFE_DEFAULT   EQU X'00'
SFE_BLUE      EQU X'F1'
SFE_RED       EQU X'F2'
SFE_PINK      EQU X'F3'
SFE_GREEN     EQU X'F4'
SFE_TURQUOISE EQU X'F5'
SFE_YELLOW    EQU X'F6'
SFE_WHITE     EQU X'F7'
*MEXIT #=    19 LV= 1 TN3270
*MCALL #=    20 LV= 1          GUAM   SYMBOLS DEFINE GUI MCS, SCREEN, AX
               ND GRAPH CODES
GUI_WINDOW_TITLE       EQU X'0101' GUI WINDOW,TITLE,'text'
GUI_WINDOW_LOC         EQU X'0102' GUI WINDOW,LOC,x,y
GUI_WINDOW_SIZE        EQU X'0103' GUI WINDOW,width,height
GUI_WINDOW_FONT        EQU X'0104' GUI WINDOW,size (8-30)
GUI_WINDOW_VIEW        EQU X'0105' GUI WINDOW,VIEW,type (0-3)
GUI_WINDOW_VIEW_NONE   EQU 0       GUI WINDOW,VIEW,NONE window closed
GUI_WINDOW_VIEW_MCS    EQU 1       GUI WINDOW,VIEW,MCS console log
GUI_WINDOW_VIEW_SCREEN EQU 2       GUI WINDOW,VIEW,SCREEN,row,col,color
GUI_WINDOW_VIEW_GRAPH  EQU 3       GUI WINDOW,VIEW,GRAPH,x,y,color
GUI_WINDOW_GETVIEW     EQU X'0106' GUI WINDOW,GETVIEW return view 0-3
GUI_SCREEN_READ        EQU X'0201' GUI SCREEN,READ,b,lb,WAIT/NOWAIT
GUI_WAIT               EQU 1       GUI WAIT FOR KEYBOARD INPUT
GUI_NOWAIT             EQU 0       GUI NOWAIT RETURN R15=4 IF NO INPUT
GUI_SCREEN_WRITE       EQU X'0202' GUI SCREEN,WRITE,row,col,b,lb,color
GUI_SCREEN_FIELD       EQU X'0203' GUI SCREEN,FIELD,row,col,length
GUI_SCREEN_CURSOR      EQU X'0204' GUI SCREEN,CURSOR,row,col,type
GUI_SCREEN_COLOR       EQU X'0205' GUI SCREEN,COLOR,bg_color,text_color
GUI_GRAPH_POINT        EQU X'0301' GUI GRAPH,POINT,x,y,color
GUI_GRAPH_LINE         EQU X'0302' GUI GRAPH,LINE,x1,y1,x2,y2,color
GUI_GRAPH_FILL         EQU X'0303' GUI GRAPH,FILL,x1,y1,x2,y2,color
GUI_GRAPH_TEXT         EQU X'0304' GUI GRAPH,TEXT,x,y,'text',color
GUI_KEYBOARD_READ      EQU X'0401' GUI KEYBOARD,mode,char,WAIT/NOWAIT
GUI_MOUSE_READ         EQU X'0501' GUI MOUSE,x,y,left,right
GUI_BUTTON_DOWN        EQU 1 MOUSE BUTTON PRESSED DOWN
GUI_BUTTON_UP          EQU 0 MOUSE BUTTON UP
GUI_SOUND_PLAY         EQU X'0601' GUI SOUND,PLAY,wav_file
*MEXIT #=    20 LV= 1 GUAM
*MCALL #=    21 LV= 1          EQUREGS
R0 EQU 0
R1 EQU 1
R2 EQU 2
R3 EQU 3
R4 EQU 4
R5 EQU 5
R6 EQU 6
R7 EQU 7
R8 EQU 8
R9 EQU 9
R10 EQU 10
R11 EQU 11
R12 EQU 12
R13 EQU 13
R14 EQU 14
R15 EQU 15
*MEXIT #=    21 LV= 1 EQUREGS
         END
